//
// Created by Jan Seredynski on 19/07/2018.
//

#ifndef CPP_COMMON_H
#define CPP_COMMON_H

#include <tins/tins.h>
#include <iostream>
#include <random>
#include <thread>
#include <chrono>




/*
 * 4-tuple will be searched between port number PORT_START and PORT_END
 */
#define PORT_START    30000
#define PORT_END    60000


/*
 * CHUNK_SIZE determines the number of packets to send in 1sec during sequence number search
 * The speed of the calculation depends on this value. The bigger it is, the faster algorithm is excuted.
 * I suggest 8000.
 */
#define CHUNK_SIZE 8000

#define WINDOW_SIZE    12600
#define ACK_LIMIT    100
#define SEQ_MAX    UINT32_MAX

/*
 *  DEBUG
 *
 *  Use below macros to speed up some steps
 */

//#define MY_DEBUG_CLIENT_PORT 56637
//#define MY_DEBUG_CHUNK_ID 37
//#define MY_DEBUG_SEQ_STEP2_START 3760104600
//#define MY_DEBUG_SEQ_STEP2_END 3760155000
/* * * * */




typedef std::chrono::high_resolution_clock::time_point Clock;
typedef Tins::HWAddress<6> MACAddress;

extern char* SERVER_IP;
extern char* VICTIM_IP;
extern uint16_t SERVER_PORT;
extern const unsigned int CLOCK_DELAY;

using namespace Tins;

extern PacketSender sender;
extern NetworkInterface iface;
extern NetworkInterface::Info info;

extern Clock global_clock;// = std::chrono::high_resolution_clock::now();

extern MACAddress serverMAC;
extern MACAddress victimtMAC;

void show_global_clock();

#endif //CPP_COMMON_H
