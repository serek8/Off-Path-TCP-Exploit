//
// Created by Jan Seredynski on 12/07/2018.
//

#include "sniffer.h"

using namespace Tins;

std::atomic<unsigned int> sniff_counter;

bool found_new_packet(PDU &some_pdu) {
    sniff_counter++;
//    std::cout << "sniff_counter: " << sniff_counter << std::endl;
    return true;
}

void sniff_main() {
    std::cout << "Sniffing - started\n";
    SnifferConfiguration config;
    config.set_promisc_mode(false);
    config.set_filter("ip and tcp[tcpflags] == tcp-ack and dst 192.168.56.4");
//    ip and tcp[tcpflags] == tcp-ack and dst 192.168.56.4
    Sniffer sniffer("eth1", config);
    sniffer.sniff_loop(found_new_packet);
}