#!/usr/bin/env python

import socket
import sys
import threading



TCP_IP = sys.argv[1]
TCP_PORT = int(sys.argv[2])
BUFFER_SIZE = 20  # Normally 1024, but we want fast response

connections = 0

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind((TCP_IP, TCP_PORT))
s.listen(1)


def client_main(conn):
    global connections
    global s
    connections += 1
    while 1:
        data = conn.recv(BUFFER_SIZE)
        if not data: break
        print("Received data: %s\n" % (data.decode("utf-8")))
        sys.stdout.flush()
        # conn.send(("THIS IS ECHO %s:" % data).encode())  # echo
    conn.close()
    connections -= 1
    if connections == 0:
        s.close()







conn, addr = s.accept()
print("Connection address: {0}:{1}".format(addr[0], addr[1]))
t = threading.Thread(target=client_main, args=[conn])
t.start()

while 1:
    msg = input("")
    conn.send(("%s"%(msg)).encode())
    print("(?) Message Sent\n")
